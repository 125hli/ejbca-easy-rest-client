name: Build Java Project and Create Minimal Docker Image with Run Command

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-jar-package:
    runs-on: ubuntu-latest

    steps:
    # 检出代码
    - name: Checkout code
      uses: actions/checkout@v4

    # 设置 Java 环境
    - name: Setup JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # 授权 gradlew 并运行构建
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Build with Gradle
      run: ./gradlew build

    # 压缩 build 文件夹
    - name: Archive build folder
      run: tar -czvf build.tar.gz -C build .

    # 上传 artifacts
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: build.tar.gz

  dockerize:
    runs-on: ubuntu-latest
    needs: build-jar-package

    steps:
    # 下载之前的 artifacts
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: ./build

    # 解压 artifacts
    - name: Extract artifacts
      run: 
        mkdir -p ./app &&
        tar -xzvf ./build/build.tar.gz -C ./app

    # 创建最小化 Dockerfile
    - name: Create Dockerfile with eclipse-temurin:17-jre-alpine
      run: |
        echo 'FROM eclipse-temurin:17-jre-alpine' >> Dockerfile
        echo 'WORKDIR /app' >> Dockerfile
        echo 'COPY app/ /app' >> Dockerfile

    # 构建最小化 Docker 镜像
    - name: Build Minimal Docker Image
      run: docker build -t erce:latest .

    # 保存 Docker 镜像为 tar 文件
    - name: Save Docker Image
      run: docker save erce:latest -o erce.tar

    # # 生成 docker run 命令并保存为文本文件
    # - name: Generate docker run command
    #   run: |
    #     echo "docker load < minimal-docker-image.tar" > docker-run-command.txt
    #     echo "docker run --rm your-minimal-image:latest" >> docker-run-command.txt

    # 上传 Docker 镜像和运行命令为 artifacts
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: docker-image-and-run-command
        path: |
          erce.tar
#          docker-run-command.txt
